import{a as We,b as Le,c as $e,d as qe}from"./chunk-P63LR5BP.js";import{a as Oe}from"./chunk-BBFNYMFZ.js";import{c as w,d as Ee,h as we,i as Te,m as A,n as ke,o as Be,p as Ne,q as Re,r as Ve,s as Ae,t as je}from"./chunk-2RZNTMAK.js";import{a as Ge}from"./chunk-U4IYFD4R.js";import{$ as g,$b as De,Bb as be,C as ee,Ea as R,G as l,H as m,Ia as H,K as x,Ka as me,La as fe,Ma as V,N as _,P as c,Pa as ue,Qb as E,Ra as he,S as I,Tb as ve,U as r,Ub as Y,V as a,W as h,Wb as _e,Xb as ye,Zb as Ce,_ as M,a as J,aa as u,ab as z,ac as Se,b as K,bc as Fe,cc as xe,da as te,dc as Ie,ea as ie,ec as Me,fc as He,ga as oe,ha as re,ia as ae,ka as d,la as D,m as X,ma as ne,n as B,o as Q,oa as se,oc as Pe,pa as le,q as v,qa as ce,r as N,ra as de,u as y,ua as pe,v as C,va as P,wb as ge,z as Z}from"./chunk-PP6H3DI6.js";var b=class o{constructor(t,e){this.httpClient=t;this.messageService=e;this.BASE_URL="https://wet-chelsy-controlat-2005cbe5.koyeb.app/api/user-diabetes-history";this.totalCarbs=x(0);this._history=[];this.selectedDate="";this.portionsGraphicWeek=x([]);this.foodByMeal=x([]);this.portionsByMeal=x([]);this._totalPortions=x(0)}insertIntoHistory(t,e){this.selectedDate=e,t.forEach(i=>{this.httpClient.post(this.BASE_URL,i).subscribe({next:()=>{this.messageService.add({severity:"success",summary:"Datos guardados",detail:"\xA1Registro a\xF1adido con \xE9xito!"}),this.getHistoryByDate(this.selectedDate),this.getTotalPortionsWeek(this.selectedDate)},error:n=>{this.messageService.add({severity:"error",summary:"Error",detail:"Error al guardar el registro"})}})})}deleteFromHistory(t,e){t.forEach(i=>{this.selectedDate=e,this.httpClient.delete(`${this.BASE_URL}/${i.logId}`).subscribe({next:()=>{this.messageService.add({severity:"success",summary:"Datos borrados",detail:"\xA1Registro borrado con \xE9xito!"}),this.getHistoryByDate(this.selectedDate),this.getTotalPortionsWeek(this.selectedDate)},error:n=>{this.messageService.add({severity:"error",summary:"Error",detail:"Error al borrar el registro"})}})})}getHistoryByDate(t){let e=localStorage.getItem("userLogged"),i=["Desayuno","Almuerzo","Comida","Cena"];this.httpClient.get(`${this.BASE_URL}/by-date?username=${e}&logDate=${t}`).subscribe({next:n=>{this._history=n,this.totalCarbs.set(0),this.resetPortions(),this._history.forEach(s=>{this.addPortions(s.portions),this.totalCarbs.set(this.totalCarbs()+s.carbohydrates)}),this.foodByMeal.set(i.map(s=>({name:s,foods:this._history.filter(p=>p.meal===s).map(p=>p.foodName)}))),this.portionsByMeal.set(i.map(s=>this._history.filter(p=>p.meal===s).reduce((p,f)=>p+f.portions,0)))}})}getTotalPortionsWeek(t){this.portionsGraphicWeek.set([]);let e=new Date(t.split("/")[1]+"/"+t.split("/")[0]+"/"+t.split("/")[2]),i=localStorage.getItem("userLogged"),n=0;for(let s=0;s<7;s++){let p=0,f;s===0?f=e.toLocaleDateString():f=new Date(e.setDate(e.getDate()-1)).toLocaleDateString(),this.httpClient.get(`${this.BASE_URL}/by-date?username=${i}&logDate=${f}`).subscribe({next:T=>{T.forEach(F=>{p=p+F.portions}),this.portionsGraphicWeek().find(F=>F.date===f)||this.portionsGraphicWeek.set([...this.portionsGraphicWeek(),{date:f,portions:p}]),n++,n===7&&this.sortData()},error:T=>{console.error("Error fetching data",T)}})}}sortData(){this.portionsGraphicWeek().sort((t,e)=>{let i=new Date(t.date),n=new Date(e.date);return i.getTime()-n.getTime()})}addPortions(t){this._totalPortions.set(this._totalPortions()+t)}get totalPortions(){return this._totalPortions()}resetPortions(){this._totalPortions.set(0)}get history(){return this._history}static{this.\u0275fac=function(e){return new(e||o)(Q(he),Q(ge))}}static{this.\u0275prov=X({token:o,factory:o.\u0275fac,providedIn:"root"})}};var Xe=["chart"],j=class o{constructor(t,e,i,n){this.platformId=t;this.cd=e;this.diabetesHistoryService=i;this.localStorageService=n;this.days=[];this.portions=[];H(()=>{let s=this.diabetesHistoryService.portionsGraphicWeek();this.days=s.map(p=>p.date),this.portions=s.map(p=>p.portions),this.updateChartData(this.portions,this.days)})}ngOnInit(){this.initChart()}initChart(){let t=getComputedStyle(document.documentElement),e=t.getPropertyValue("--text-color"),i=t.getPropertyValue("--text-color-secondary"),n=t.getPropertyValue("--surface-border");this.data={labels:this.diabetesHistoryService.portionsGraphicWeek().map(s=>s.date),datasets:[{label:"Raciones de insulina administradas en una semana",data:this.diabetesHistoryService.portionsGraphicWeek().map(s=>s.portions),fill:!0,tension:.4}]},this.options={maintainAspectRatio:!1,aspectRatio:.6,plugins:{legend:{}},scales:{x:{ticks:{color:i},grid:{color:n,drawBorder:!1}},y:{ticks:{color:i},grid:{color:n,drawBorder:!1}}}}}updateChartData(t,e){this.data.datasets[0].data=t,this.data.labels=e,this.chart&&this.chart.chart&&this.chart.chart.update(),this.cd.detectChanges()}get isLightTheme(){return this.localStorageService.darkTheme}static{this.\u0275fac=function(e){return new(e||o)(m(ee),m(R),m(b),m(Oe))}}static{this.\u0275cmp=v({type:o,selectors:[["diabetes-graphic"]],viewQuery:function(e,i){if(e&1&&oe(Xe,5),e&2){let n;re(n=ae())&&(i.chart=n.first)}},decls:3,vars:2,consts:[["chart",""],["type","bar",3,"data","options"]],template:function(e,i){e&1&&(r(0,"p-card"),h(1,"p-chart",1,0),a()),e&2&&(l(),c("data",i.data)("options",i.options))},dependencies:[A,w]})}};var O=class o{constructor(t,e){this.cd=t;this.diabetesHistoryService=e;this.themeEffect=H(()=>{this.initChart(),this.diabetesHistoryService.portionsByMeal()})}ngOnInit(){this.initChart()}initChart(){this.data={datasets:[{data:this.diabetesHistoryService.portionsByMeal(),backgroundColor:["pink","orange","purple","cyan"],label:"Raciones de insulina"}],labels:["Desayuno","Almuerzo","Comida","Cena"]},this.options={plugins:{legend:{}},scales:{r:{grid:{color:"grey"}}}}}static{this.\u0275fac=function(e){return new(e||o)(m(R),m(b))}}static{this.\u0275cmp=v({type:o,selectors:[["diabetes-polar-graphic"]],decls:2,vars:2,consts:[["type","polarArea",1,"w-7","inline-block",3,"data","options"]],template:function(e,i){e&1&&(r(0,"p-card"),h(1,"p-chart",0),a()),e&2&&(l(),c("data",i.data)("options",i.options))},dependencies:[A,w]})}};var ot=()=>({height:"6px"}),W=o=>({"background-color":o});function rt(o,t){o&1&&(r(0,"div",14),h(1,"p-progressBar",15),a()),o&2&&(l(),I(pe(2,ot)))}function at(o,t){o&1&&(r(0,"tr")(1,"th"),d(2,"Alimentos"),a()())}function nt(o,t){if(o&1){let e=M();r(0,"tr",19)(1,"td",20)(2,"div")(3,"form",21),g("submit",function(){let n=y(e).$implicit,s=u(3);return C(s.addFoodToMeal(s.selectedMeal.name,n))}),r(4,"label"),d(5),a(),r(6,"p-inputNumber",22),g("keyup",function(){let n=y(e).$implicit,s=u(3);return C(s.calculate(n.id))}),a(),r(7,"span"),d(8),a(),h(9,"p-button",23),a()(),r(10,"div")(11,"td",24)(12,"div",25)(13,"span",26),d(14,"Carbohidratos"),a(),r(15,"div",27)(16,"span",28),d(17),a()()(),r(18,"div",25)(19,"span",26),d(20,"Raciones"),a(),r(21,"div",27)(22,"span",28),d(23),a()()()()()()()}if(o&2){let e=t.$implicit,i=u(3);l(3),c("formGroup",i.foodForm),l(2),D(e.name),l(3),D(e.serving_description),l(7),I(P(9,W,i.carbsColor)),l(2),D(e.carbohydrate),l(4),I(P(11,W,i.fatColor)),l(2),D(i.calculatePortions(e.carbohydrate))}}function st(o,t){if(o&1&&(r(0,"p-table",16),_(1,at,3,0,"ng-template",17)(2,nt,24,13,"ng-template",18),a()),o&2){let e=u(2);c("value",e.foodsSearched)}}function lt(o,t){o&1&&(r(0,"tr")(1,"th"),d(2,"Alimentos A\xF1adidos"),a()())}function ct(o,t){if(o&1){let e=M();r(0,"tr")(1,"td",20)(2,"div",30),d(3),r(4,"p-button",31),g("click",function(){let n=y(e).$implicit,s=u(3);return C(s.deleteFoodFromMeal(n))}),a()(),r(5,"div",24)(6,"div",25)(7,"span",26),d(8,"Carbohidratos"),a(),r(9,"div",27)(10,"span",28),d(11),a()()(),r(12,"div",25)(13,"span",26),d(14,"Raciones"),a(),r(15,"div",27)(16,"span",28),d(17),a()()()()()()}if(o&2){let e=t.$implicit,i=u(3);l(3),se(" ",e.foodName," ",e.quantity," ",e.units," "),l(6),I(P(9,W,i.carbsColor)),l(2),D(e.carbohydrates),l(4),I(P(11,W,i.fatColor)),l(2),D(e.portions)}}function dt(o,t){if(o&1&&(r(0,"p-table",29),_(1,lt,3,0,"ng-template",17)(2,ct,18,13,"ng-template",18),a()),o&2){let e=u(2);c("value",e.getuserHistoryByMeal(e.selectedMeal.name))("ngClass",e.foodsSearched.length>0?"w-1/2":"w-full")}}function pt(o,t){if(o&1){let e=M();r(0,"div",4)(1,"div",5)(2,"label",6),d(3,"Buscar alimentos"),a(),r(4,"form",7)(5,"input",8),g("keydown.enter",function(){y(e);let n=u();return C(n.searchFoods())}),a(),r(6,"p-button",9),g("click",function(){y(e);let n=u();return C(n.searchFoods())}),a()(),_(7,rt,2,3,"div",10),a(),r(8,"div",11),_(9,st,3,1,"p-table",12)(10,dt,3,2,"p-table",13),a()()}if(o&2){let e=u();l(4),c("formGroup",e.searchForm),l(3),c("ngIf",e.isSearching),l(2),c("ngIf",e.foodsSearched.length>0),l(),c("ngIf",e.getuserHistoryByMeal(e.selectedMeal.name).length>0)}}var L=class o{constructor(t,e,i,n){this.foodService=t;this.diabetesHistoryService=e;this.formBuilder=i;this.userService=n;this.visible=!1;this.history=[];this.selectedDate="";this.visibleChange=new Z;this.proteinColor="rgb(60,50,140)";this.carbsColor="rgb(114,234,142)";this.fatColor="rgb(255, 99, 132)";this.caloriesColor="rgb(228,234,60)";this._foodsSearched=[];this._foodAdded=[];this.originalValues={};this._foodDeleted=[];this._userIcr=0;this._userActivityFactor="";this._userInsulineResistence=0;this.portions=0;this.foodForm=this.formBuilder.group({quantity:[100,[Y.required,Y.min(1)]]});this.searchForm=this.formBuilder.group({searchTerm:[""]})}ngOnInit(){this.userService.userInfo.subscribe(t=>{this._userIcr=t.icr,this._userActivityFactor=t.activityFactor,this._userInsulineResistence=t.insulinaFactor})}calculatePortions(t){let e=t/this._userIcr,i=this._userInsulineResistence;switch(e*=1+(i-1)*.2,this._userActivityFactor){case"POCO_SEDENTARIO":e*=1.1;break;case"SEDENTARIO":e*=1.2;break;case"MODERADAMENTE_SEDENTARIO":e*=1;break;case"ACTIVO":e*=.9;break;case"MUY_ACTIVO":e*=.8;break;default:console.warn("Nivel de actividad no reconocido");break}return this.portions=Math.round(e*2)/2,Math.round(e*2)/2}searchFoods(){this.foodService.getFoods(this.searchForm.get("searchTerm")?.value),this.foodForm.patchValue({quantity:100}),this.calculatePortions(100)}closeModal(){this.visible=!1,this.visibleChange.emit(this.visible),this.foodForm.patchValue({quantity:100}),this.searchForm.patchValue({searchTerm:""})}get foodsSearched(){return this._foodsSearched=this.foodService.foodsInfo(),this._foodsSearched}addFoodToMeal(t,e){this._foodAdded.push({logId:Le(),username:localStorage.getItem("userLogged"),logDate:this.selectedDate,foodId:parseInt(e.id),meal:t,foodName:e.name,quantity:this.foodForm.controls.quantity.value,carbohydrates:parseFloat(e.carbohydrate),units:e.serving_description,portions:this.portions})}getuserHistoryByMeal(t){let e=this.history.filter(n=>n.meal==t),i=this._foodAdded.filter(n=>n.meal==t);return[...e,...i]}deleteFoodFromMeal(t){this._foodDeleted.push(t),this._foodAdded=this._foodAdded.filter(e=>e.logId!==t.logId),this.history=this.history.filter(e=>e.logId!==t.logId)}get isSearching(){return this.foodService.searching}calculate(t){let e=this._foodsSearched.find(i=>i.id==`${t}`);if(e){this.originalValues[e.id]||(this.originalValues[e.id]=K(J({},e),{protein:e.protein,carbohydrate:e.carbohydrate,fat:e.fat,calories:e.calories}));let i=parseFloat(this.originalValues[e.id].protein),n=parseFloat(this.originalValues[e.id].carbohydrate),s=parseFloat(this.originalValues[e.id].fat),p=parseFloat(this.originalValues[e.id].calories),f=this.foodForm.controls.quantity.value;if(console.log(f),!isNaN(f)&&f>0){let T=i/100*f,F=n/100*f,ze=s/100*f,Ye=p/100*f;e.protein=T.toFixed(2),e.carbohydrate=F.toFixed(2),e.fat=ze.toFixed(2),e.calories=Ye.toFixed(2),this.calculatePortions(F)}else console.error("Cantidad no v\xE1lida")}}saveMeal(){this.diabetesHistoryService.insertIntoHistory(this._foodAdded,this.selectedDate),this.diabetesHistoryService.deleteFromHistory(this._foodDeleted,this.selectedDate),this._foodAdded=[],this._foodDeleted=[],this.closeModal()}static{this.\u0275fac=function(e){return new(e||o)(m($e),m(b),m(Fe),m(Ge))}}static{this.\u0275cmp=v({type:o,selectors:[["search-food-diabetes"]],inputs:{visible:"visible",selectedMeal:"selectedMeal",history:"history",selectedDate:"selectedDate"},outputs:{visibleChange:"visibleChange"},decls:4,vars:4,consts:[[3,"visibleChange","onHide","visible","modal","header"],["class","p-fluid",4,"ngIf"],[1,"flex","justify-content-end","mt-3"],["label","Guardar",3,"click"],[1,"p-fluid"],[1,"field"],["for","search"],[1,"flex","gap-2","mb-4",3,"formGroup"],["formControlName","searchTerm","id","search","type","text","pInputText","","placeholder","Escribe el nombre del alimento...",3,"keydown.enter"],["icon","pi pi-search",3,"click"],["class","card",4,"ngIf"],[1,"flex","gap-8"],[3,"value",4,"ngIf"],[3,"value","ngClass",4,"ngIf"],[1,"card"],["mode","indeterminate"],[3,"value"],["pTemplate","header"],["pTemplate","body"],[1,"tr-space"],[1,"flex","flex-column","align-items-center","justify-content-between","gap-4"],[1,"flex","align-items-center","justify-content-center","gap-2",3,"submit","formGroup"],["formControlName","quantity",3,"keyup"],["type","submit","icon","pi pi-plus"],[1,"flex","flex-nowrap","gap-2","justify-content-around","pb-4"],[1,"flex","flex-column","gap-2","flex-1"],[1,"text-center"],[1,"border-round","flex","justify-content-center"],[1,"text-white"],[3,"value","ngClass"],[1,"flex","align-items-center","justify-content-between","w-full"],["icon","pi pi-minus",3,"click"]],template:function(e,i){e&1&&(r(0,"p-dialog",0),de("visibleChange",function(s){return ce(i.visible,s)||(i.visible=s),s}),g("onHide",function(){return i.closeModal()}),_(1,pt,11,4,"div",1),r(2,"div",2)(3,"p-button",3),g("click",function(){return i.saveMeal()}),a()()()),e&2&&(te("header",i.selectedMeal==null?null:i.selectedMeal.name),le("visible",i.visible),c("modal",!0),l(),c("ngIf",i.selectedMeal))},dependencies:[me,V,E,be,Ce,ve,_e,ye,De,Se,Be,we,Me,Ae,Re]})}};function ft(o,t){if(o&1&&h(0,"p-button",10),o&2){let e=t.$implicit;c("label",e.length>15?e.slice(0,15)+"...":e)("rounded",!0)}}function ut(o,t){if(o&1&&(r(0,"div",7)(1,"div",8),_(2,ft,1,2,"p-button",9),a(),r(3,"p")(4,"strong"),d(5,"Total de alimentos:"),a(),d(6),a()()),o&2){let e=u().$implicit;l(2),c("ngForOf",e.foods),l(4),ne(" ",e.foods.length,"")}}function ht(o,t){o&1&&(r(0,"div")(1,"strong"),d(2,"Sin alimentos que mostrar"),a()())}function gt(o,t){if(o&1){let e=M();r(0,"p-card",4),g("click",function(){let n=y(e).$implicit,s=u();return C(s.openModal(n))}),_(1,ut,7,2,"div",5)(2,ht,3,0,"div",6),a()}if(o&2){let e=t.$implicit;ie("header","",e.name," "),l(),c("ngIf",e.foods&&e.foods.length>0),l(),c("ngIf",e.foods&&e.foods.length==0)}}var $=class o{constructor(t){this.diabetesHistoryService=t;this.history=[];this.selectedDate="";this.meals=[];this.displayModal=!1;this.selectedMeal="";H(()=>{this.meals=this.diabetesHistoryService.foodByMeal()})}openModal(t){this.selectedMeal=t,this.displayModal=!0}static{this.\u0275fac=function(e){return new(e||o)(m(b))}}static{this.\u0275cmp=v({type:o,selectors:[["food-info-diabetes"]],inputs:{history:"history",selectedDate:"selectedDate"},decls:4,vars:5,consts:[[1,"flex","flex-column","flex-wrap","gap-3","justify-content-start"],[1,"flex","flex-1","flex-wrap","gap-4","justify-content-between"],["styleClass","cursor-pointer hover:scale-105 transition-all","class","w-5",3,"header","click",4,"ngFor","ngForOf"],[3,"visibleChange","visible","selectedMeal","history","selectedDate"],["styleClass","cursor-pointer hover:scale-105 transition-all",1,"w-5",3,"click","header"],["class","flex gap-2 flex-column",4,"ngIf"],[4,"ngIf"],[1,"flex","gap-2","flex-column"],[1,"flex","flex-column","gap-2"],["icon","pi pi-check","iconPos","right","class","flex-1",3,"label","rounded",4,"ngFor","ngForOf"],["icon","pi pi-check","iconPos","right",1,"flex-1",3,"label","rounded"]],template:function(e,i){e&1&&(r(0,"div",0)(1,"div",1),_(2,gt,3,4,"p-card",2),a(),r(3,"search-food-diabetes",3),g("visibleChange",function(s){return i.displayModal=s}),a()()),e&2&&(l(2),c("ngForOf",i.meals),l(),c("visible",i.displayModal)("selectedMeal",i.selectedMeal)("history",i.history)("selectedDate",i.selectedDate))},dependencies:[fe,V,E,w,L]})}};var q=class o{constructor(t){this.diabetesHistoryService=t;this.date=""}onDateChange(t){this.date=t,this.diabetesHistoryService.getHistoryByDate(this.date),this.diabetesHistoryService.getTotalPortionsWeek(this.date)}ngOnInit(){this.date=new Date().toLocaleDateString(),this.diabetesHistoryService.getHistoryByDate(this.date)}get history(){return this.diabetesHistoryService.history}static{this.\u0275fac=function(e){return new(e||o)(m(b))}}static{this.\u0275cmp=v({type:o,selectors:[["app-diabetes-page"]],decls:11,vars:2,consts:[[1,"mr-8","ml-8"],[1,"flex","align-items-center","mb-5","gap-7"],[3,"selectedDateChange"],[1,"flex-1"],[1,"flex","align-items-center","justify-content-center","gap-8","mb-5"],[3,"history","selectedDate"],[1,"flex-1","text-center"]],template:function(e,i){e&1&&(r(0,"main",0)(1,"div",1)(2,"div")(3,"calories-calendar",2),g("selectedDateChange",function(s){return i.onDateChange(s)}),a()(),r(4,"div",3),h(5,"diabetes-graphic"),a()(),r(6,"div",4)(7,"div",3),h(8,"food-info-diabetes",5),a(),r(9,"div",6),h(10,"diabetes-polar-graphic"),a()()()),e&2&&(l(8),c("history",i.history)("selectedDate",i.date))},dependencies:[We,j,O,$],styles:["main[_ngcontent-%COMP%]{margin-top:140px}"]})}};var vt=[{path:"",component:q}],U=class o{static{this.\u0275fac=function(e){return new(e||o)}}static{this.\u0275mod=N({type:o})}static{this.\u0275inj=B({imports:[z.forChild(vt),z]})}};var Qe=class o{static{this.\u0275fac=function(e){return new(e||o)}}static{this.\u0275mod=N({type:o})}static{this.\u0275inj=B({imports:[ue,U,qe,ke,E,Pe,Ie,Ee,Ne,xe,Te,He,je,Ve]})}};export{Qe as DiabetesModule};
